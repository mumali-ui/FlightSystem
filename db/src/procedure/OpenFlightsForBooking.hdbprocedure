PROCEDURE "OpenFlightsForBooking" ( 
	IN im_from_date DATE,
	IN im_to_date DATE,
	IN im_flight NVARCHAR(6),
	IN im_plane integer,
	OUT ex_error NVARCHAR(100))
LANGUAGE SQLSCRIPT SQL
SECURITY INVOKER AS
BEGIN
	-- Declare variables
	declare noc1, noc2 integer;
	-- Log variables
	declare log_level integer = 0;
	declare log_err_level integer = -1;
	declare log_comment nvarchar(1000);
	
	SELECT count("FLIGHT") INTO noc1
		FROM "Flight"
		WHERE "FDATE" BETWEEN :im_from_date AND :im_to_date
			AND "FLIGHT" = :im_flight;

	SELECT count("FLIGHT") INTO noc2
		FROM "Booking"
		WHERE "FDATE" BETWEEN :im_from_date AND :im_to_date
			AND "FLIGHT" = :im_flight;
		
	IF (:noc1 > 0 OR :noc2 > 0) THEN
		
		ex_error := 'ERROR: Flight ' || :im_flight ||' already open for booking between ' || :im_from_date || ' and ' || :im_to_date;
		-- Create Log Entry
		log_comment = ex_error;
		call "CreateLog" (::CURRENT_OBJECT_NAME, log_err_level, log_comment, 0);
		
	ELSE
		
		BEGIN AUTONOMOUS TRANSACTION
			-- Create Flight Record
			INSERT INTO "Flight"("FLIGHT","FDATE","PLANE","DEPT","ARRT","STATUS")
			SELECT A."FLIGHT", B."CDATE", :im_plane, A."DEPT", A."ARRT", 'SCHEDULED'
			FROM "Connection" as A, "PriceCalendar" as B
			WHERE B."CDATE" BETWEEN :im_from_date AND :im_to_date
			AND A.FLIGHT = :im_flight;
	
			-- Create Open Seats
			INSERT INTO "Booking"("FLIGHT","FDATE","MODEL","SEAT",STDPRICE,"STATUS")	
			SELECT A."FLIGHT", A."FDATE",D."MODEL",D."SEAT", C."ESPRICE",'AVAILABLE'
			FROM "Flight" as A, "Plane" as B, "Connection" as C, "Seat" as D
			WHERE A."FLIGHT" = C."FLIGHT"
			AND A."PLANE" = B."REGNO" 
			AND B."MODEL" = D."MODEL"
			AND A."FDATE" BETWEEN :im_from_date AND :im_to_date
			AND A."FLIGHT" = :im_flight;
		END;

		SELECT count("FLIGHT") INTO noc1
			FROM "Flight"
			WHERE "FDATE" BETWEEN :im_from_date AND :im_to_date
				AND "FLIGHT" = :im_flight;

		SELECT count("FLIGHT") INTO noc2
			FROM "Booking"
			WHERE "FDATE" BETWEEN :im_from_date AND :im_to_date
				AND "FLIGHT" = :im_flight;

		-- Create log Entry
		log_comment = 'INFO: Flight Records created, for FLIGHT=' || im_flight || ' from: ' || im_from_date || ' to: ' || im_to_date;
		log_level = log_level + 1;
		call "CreateLog" (::CURRENT_OBJECT_NAME, log_level, log_comment, 1);	
		
		-- Create log Entry			
		log_comment = 'INFO: Booking Records created, for FLIGHT=' || im_flight || ' from: ' || im_from_date || ' to: ' || im_to_date;
		log_level = log_level + 1;
		call "CreateLog" (::CURRENT_OBJECT_NAME, log_level, log_comment, 1);	
		
	END IF;
					
END